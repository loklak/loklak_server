buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['res']
sourceSets.test.java.srcDirs = ['test']

checkstyle {
    configFile = file("${project.rootDir}/conf/checkstyle.xml")
    toolVersion = '7.7'
    showViolations = false
}

jar {
    manifest {
        attributes 'Main-Class': 'org.loklak.LoklakServer'
    }
}

shadowJar {
    mergeServiceFiles()

    from('conf') {
        into 'conf'
    }

    from('html') {
        into 'html'
    }

    from('installation') {
        into 'installation'
    }

    from('ssi') {
        into 'ssi'
    }
}
assemble.dependsOn shadowJar

repositories {
    mavenCentral()
}

dependencies {
    compile "org.apache.lucene:lucene-analyzers-common:${luceneVersion}"
    compile "org.apache.lucene:lucene-backward-codecs:${luceneVersion}"
    compile "org.apache.lucene:lucene-core:${luceneVersion}"
    compile "org.apache.lucene:lucene-grouping:${luceneVersion}"
    compile "org.apache.lucene:lucene-highlighter:${luceneVersion}"
    compile "org.apache.lucene:lucene-join:${luceneVersion}"
    compile "org.apache.lucene:lucene-memory:${luceneVersion}"
    compile "org.apache.lucene:lucene-misc:${luceneVersion}"
    compile "org.apache.lucene:lucene-queries:${luceneVersion}"
    compile "org.apache.lucene:lucene-queryparser:${luceneVersion}"
    compile "org.apache.lucene:lucene-sandbox:${luceneVersion}"
    compile "org.apache.lucene:lucene-spatial:${luceneVersion}"
    compile "org.apache.lucene:lucene-spatial3d:${luceneVersion}"
    compile "org.apache.lucene:lucene-suggest:${luceneVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    compile "org.eclipse.jetty:jetty-http:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-io:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-rewrite:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-security:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlets:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-util:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    compile "org.apache.logging.log4j:log4j-1.2-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile "org.bouncycastle:bcprov-jdk15on:${bouncycastleVersion}"
    compile "org.bouncycastle:bcpkix-jdk15on:${bouncycastleVersion}"
    compile "org.twitter4j:twitter4j-core:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-stream:${twitter4jVersion}"
    compile "org.ow2.asm:asm:${asmVersion}"
    compile "org.ow2.asm:asm-commons:${asmVersion}"
    compile "org.elasticsearch:elasticsearch:2.4.0"
    compile "commons-logging:commons-logging:1.2"
    compile "com.robbypond:boilerpipe:1.2.3"
    compile "commons-cli:commons-cli:1.3.1"
    compile "com.ning:compress-lzf:1.0.2"
    compile "org.codehaus.groovy:groovy-all:2.4.4"
    compile "com.google.guava:guava:18.0"
    compile "org.hamcrest:hamcrest-core:1.3"
    compile "org.hdrhistogram:HdrHistogram:2.1.6"
    compile "com.carrotsearch:hppc:0.7.1"
    compile "org.apache.httpcomponents:httpclient:4.5.2"
    compile "org.apache.httpcomponents:httpcore:4.4.4"
    compile "org.apache.httpcomponents:httpmime:4.5.2"

    compile "com.github.spullara.mustache.java:compiler:0.8.13"
    compile "org.antlr:antlr-runtime:3.5"
    compile "com.sun.mail:javax.mail:1.5.5"
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "net.sf.jcommon:jcommon:1.0.1"
    compile "org.jdom:jdom:1.1.3"
    compile "org.eclipse.jetty:jetty-eventsource-servlet:1.0.0"
    compile "org.jfree:jfreechart:1.0.19"
    compile "net.java.dev.jna:jna:4.1.0"
    compile "org.joda:joda-convert:1.2"
    compile "joda-time:joda-time:2.9.4"
    compile "com.github.fge:json-schema-validator:2.2.6"
    compile "org.jsoup:jsoup:1.9.2"
    compile "com.twitter:jsr166e:1.1.0"
    compile "com.vividsolutions:jts:1.13"
    compile "junit:junit:4.12"
    compile "net.sourceforge.nekohtml:nekohtml:1.9.17"
    compile "io.netty:netty:3.10.6.Final"
    compile "rome:rome:1.0"
    compile "org.elasticsearch:securesm:1.0"
    compile "org.slf4j:slf4j-api:1.7.21"
    compile "org.yaml:snakeyaml:1.15"
    compile "com.spatial4j:spatial4j:0.5"
    compile "com.tdunning:t-digest:3.0"
    compile "xerces:xerces:2.4.0"
    compile "org.unbescape:unbescape:1.0"
    compile "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0"
}

tasks.withType(Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
}

task setup(type: JavaExec, dependsOn: classes) {
    main = 'org.loklak.LoklakInstallation'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task start(type: JavaExec, dependsOn: classes) {
    main = 'org.loklak.LoklakServer'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
check.dependsOn jacocoTestReport

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
